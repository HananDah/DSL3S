[comment encoding = UTF-8 /]
[module varEnvironment('http://www.eclipse.org/uml2/3.0.0/UML')]
[import dsl3s::templates::services/]

[comment
Date: 09-08-2012    Author: LuÃ­s de Sousa  (luis.a.de.sousa@gmail.com)
Environment variable class.
/]

[template public environment(c : Class) ? (c.hasStereotype('Environment'))]

[file (c.name.concat('.java'), false, 'UTF-8')]
import sim.engine.SimState;
import sim.engine.Steppable;
import sim.engine.Stoppable;
import sim.util.Int2D;
import ec.util.MersenneTwisterFast;

public class [c.name/] implements Steppable, Stoppable {
	
	protected Integer value = [c.getTaggedValue(c, 'Environment', 'initValue')/]; 
	public static  Integer stepVar = [c.getTaggedValue(c, 'Environment', 'stepVariation')/];
	public static  Integer valueMax = [c.getTaggedValue(c, 'Environment', 'maxValue')/];
	public static  Integer valueMin = [c.getTaggedValue(c, 'Environment', 'minValue')/];
	
	public Integer getValue() {return value;}
	public void setValue(int newValue) {
		value = newValue;
		if (value > valueMax) value = valueMax;
		if (value < valueMin) value = valueMin;
	}
	
	public Integer harvestPercent(Integer percent) {
		Integer harvested = (int) Math.round(value * (percent / 100.0));
		setValue(value - harvested);
		return harvested;
	}
	public Integer harvestValue(Integer val) {
		Integer res;
		if(val < value) res = val;
		else res = value;
		setValue(value - val);
		return res;
	}

	private Stoppable stopper = null;
    public void setStopper(Stoppable stopper) {this.stopper = stopper;}
    public void stop() {stopper.stop();}
	
	public [c.name/]() {}
	
	public [c.name/](int init) {value = init;}

	public [c.name/](MersenneTwisterFast randGen) {
		value = randGen.nextInt(valueMax - valueMin) + valueMin;
	}
	
	//@Override
	public void step(SimState state) { setValue(value + stepVar); }
	
	[comment Makes sense? Must rethink this. /]
	// This empty perish method facilitates things in the Animat Harvest process
	public void perish(Int2D location, SimGrid domain) {}

}

[/file]
[/template]