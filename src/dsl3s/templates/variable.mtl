[comment encoding = UTF-8 /]
[module variable('http://www.eclipse.org/uml2/3.0.0/UML')]
[import dsl3s::templates::services/]

[comment
Date: 07-08-2013    Author: LuÃ­s de Sousa  (luis.a.de.sousa@gmail.com)
Generates an abstract class for the generic stereotype Variable.
/]

[template public variable(c : Class) ? (c.hasStereotype('Simulation'))]

[file ('Variable.java', false, 'UTF-8')]
import ec.util.MersenneTwisterFast;

public /*abstract*/ class Variable 
{
	protected Double value; 
	protected Double valueMax;
	protected Double valueMin;

	public Double getValue() {return value;}
	
	public void setValue(Double newValue) 
	{
		value = newValue;
		if (value > valueMax) value = valueMax;
		if (value < valueMin) value = valueMin;
	}
	
	public void setRandom(MersenneTwisterFast randGen)
	{
		value = randGen.nextDouble() * (valueMax - valueMin) + valueMin;
	}
	
	public Double harvestPercent(Double percent, Double max) 
	{
		Double harvested = value * percent / 100.0;
		if((max != null) && (harvested > max)) setValue(value - max);
		else setValue(value - harvested);
		return harvested;
	}

	public Double harvestValue(Double val, Double max) 
	{
		Double harvested;
		if(val < value) harvested = val;
		else harvested = value;
		if((max != null) && (harvested > max)) setValue(value - max);
		else setValue(value - harvested);
		return harvested;
	}
	
	//public Variable() {}

	public Variable(Double val, Double max, Double min) 
	{
		value = val;
		valueMax = max;	
		valueMin = min;
	}
}


[/file]

[/template]